[build-system]
build-backend = 'mesonpy'
requires = ['meson-python', 'wheel', 'ninja', 'pybind11', 'numpy'] # 'pythran-openblas'  "cmake". nanobind

[project]
name = "scikit-primate"
version = "0.3.3"
readme = "README.md"
classifiers = [
	"Intended Audience :: Science/Research",
	"Development Status :: 3 - Alpha",
	"License :: OSI Approved :: Apache Software License",
	"Programming Language :: Python :: 3"
]
authors = [
	{ name = "Matt Piekenbrock", email = "matt.piekenbrock@gmail.com" }
]
requires-python = ">=3.8"
dependencies = [
  "numpy", 
  "scipy",
	"more_itertools"
]
license = {file = "LICENSE"}
include = [
	{ path = "primate/**/*.so", format = "wheel" },
	{ path = "primate/**/*.pyd", format = "wheel" }
]

[project.optional-dependencies]
test = ["pytest", "pytest-cov", "pytest-benchmark", "bokeh"]
doc = ["quartodoc"]
dev = ['meson-python', 'wheel', 'ninja', 'pybind11', 'numpy']

[tool.pytest.ini_options]
addopts = "-ra --benchmark-skip"

[tool.meson-python.args]
setup = ['--default-library=static']

[tool.cibuildwheel]
test-requires = ["pytest", "pytest-cov", "pytest-benchmark", "bokeh"] # coverage-badge
# test-command = "coverage run --source={package} -m pytest {package}/tests" # "coverage report -m"
test-command = "python -m pytest {package}/tests/ --cov={package} --benchmark-skip"
build-verbosity = 1
skip = "cp36-* pp* cp37-* *_ppc64le *_i686 *_s390x *-musllinux*" # todo: revisit musllinux
manylinux-x86_64-image = "manylinux_2_28" # prefer the newer one

[tool.cibuildwheel.linux]
before-build = "bash {project}/tools/cibw_linux.sh {project}"
environment = { CC="clang", CXX="clang++" }
# before-build = ["ulimit -n 4096", "yum install -y clang", "yum install -y openblas"]

[tool.cibuildwheel.macos]
before-build = "bash {project}/tools/cibw_macos.sh"
environment = { CC="/usr/local/opt/llvm/bin/clang", CXX="/usr/local/opt/llvm/bin/clang++" }

[tool.cibuildwheel.windows]
before-build = "bash {project}/tools/cibw_windows.sh"
environment = { PKG_CONFIG_PATH="C:/opt/64/lib/pkgconfig", CC="clang-cl", CXX="clang-cl"}
# environment = { PKG_CONFIG_PATH="C:/opt/64/lib/pkgconfig", CC="clang", CXX="clang++"}
# repair-wheel-command = "delvewheel repair -w {dest_dir} {wheel}"
# before-build = "choco install rtools -y --no-progress --force --version=4.0.0.20220206 && set PATH=C:\\rtools40\\ucrt64\\bin\\;%PATH%"
# repair-wheel-command = "bash ./tools/repair_windows.sh {wheel} {dest_dir}"

