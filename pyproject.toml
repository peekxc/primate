# python -m build -Ccompile-args="-j6" . --no-isolation
[build-system]
build-backend = 'mesonpy'
requires = ['meson-python', 'numpy', 'pythran', 'pybind11']
#  'pythran-openblas'
#  'nanobind'

[project]
name = 'scikit-primate'
version = '0.5.1'
description = 'Package for implicit matrix function, trace, and diagonal estimation.'
readme = 'README.md'
requires-python = '>=3.8'
authors = [{ name = 'Matt Piekenbrock', email = 'matt.piekenbrock@gmail.com' }]
classifiers = [
	"Intended Audience :: Science/Research",
	"Development Status :: 3 - Alpha",
	"License :: OSI Approved :: Apache Software License",
	"Programming Language :: Python :: 3"
]
dependencies = [
  "numpy", 
  "scipy"
]
license = {file = "LICENSE"}
include = [
	{ path = "primate/**/*.so", format = "wheel" },
	{ path = "primate/**/*.pyd", format = "wheel" }
]

[project.optional-dependencies]
test = ["pytest", "pytest-cov", "pytest-benchmark"] # "bokeh"
doc = ["quartodoc"]
dev = ['meson-python', 'wheel', 'ninja', 'pybind11', 'numpy']

# [tool.meson-python.args]
# setup = ['-DPYTHRANRC=.pythranrc']

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-rA"
testpaths = ["tests"]
norecursedirs = ["docs", "*.egg-info", ".git"]


[tool.cibuildwheel]
before-all = "python -m pip install --upgrade pip cibuildwheel"
test-requires = ["pytest", "pytest-cov", "pytest-benchmark"] # coverage-badg, # "bokeh"
# test-command = "coverage run --source={package} -m pytest {package}/tests" # "coverage report -m"
test-command = "python -m pytest {package}/tests/ --cov={package} --benchmark-skip"
build-verbosity = 1
skip = "cp36-* pp* cp37-* *_ppc64le *_i686 *_s390x *-musllinux*" # todo: revisit musllinux
# manylinux-x86_64-image = "manylinux_2_28" # prefer the newer one
manylinux-x86_64-image = "manylinux2014"

[tool.cibuildwheel.linux]
# before-build = "bash {project}/tools/cibw_linux.sh {project}"
environment = { CC="gcc", CXX="g++" } # for manylinux2014
# environment = { CC="clang", CXX="clang++" } # for manylinux_2_28

# before-build = ["ulimit -n 4096", "yum install -y clang", "yum install -y openblas"]

[tool.cibuildwheel.macos]
# before-build = "bash {project}/tools/cibw_macos.sh"
environment = { CC="/opt/homebrew/opt/llvm/bin/clang", CXX="/opt/homebrew/opt/llvm/bin/clang++" }

[tool.cibuildwheel.windows]
# before-build = "bash {project}/tools/cibw_windows.sh"
environment = { PKG_CONFIG_PATH="C:/opt/64/lib/pkgconfig", CC="clang-cl", CXX="clang-cl"}