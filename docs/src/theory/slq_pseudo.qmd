---
title: "SLQ Trace guide"
format:
  html:
    include-in-header:
      text: |
        <script>
        MathJax = {
          loader: {
            load: ['[tex]/boldsymbol']
          },
          tex: {
            tags: "all",
            inlineMath: [['$','$'], ['\\(','\\)']],
            displayMath: [['$$','$$'], ['\\[','\\]']],
            processEscapes: true,
            processEnvironments: true,
            packages: {
              '[+]': ['boldsymbol']
            }
          }
        };
        </script>
        <script src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-chtml-full.js" type="text/javascript"></script>
---

To clarify that that means, here's an abstract presentation of the generic SLQ procedure: 

```{.pseudocode}
#| label: alg-slq
#| html-indent-size: "1.1em"
#| html-comment-delimiter: "//"
#| html-line-number: true
#| html-line-number-punc: ":"
#| html-no-end: true
\begin{algorithm}
\caption{Stochastic Lanczos Quadrature}
\begin{algorithmic}
\Input Symmetric operator ($A \in \mathbb{R}^{n \times n}$)
\Require Number of queries ($n_v$), Degree of quadrature ($k$)
\Function{SLQ}{$A$, $n_v$, $k$}
\State $\Gamma \gets 0$
\For{$j = 1, 2, \dots, n_v$}
\State $v_i \sim \mathcal{D}$ where $\mathcal{D}$ satisfies $\mathbb{E}(v v^\top) = I$
\State $T^{(j)}(\alpha, \beta)$ $\gets$ $\mathrm{Lanczos}(A,v_j,k+1)$
\State $[\Theta, Y] \gets \mathrm{eigh\_tridiag}(T^{(j)}(\alpha, \beta))$
\State $\tau_i \gets \langle e_1, y_i \rangle$
\State < Do something with the node/weight pairs $(\theta_i, \tau_i^2)$ >
\EndFor
\EndFunction
\end{algorithmic}
\end{algorithm}
```

